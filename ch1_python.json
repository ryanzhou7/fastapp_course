[
    {
        "question": "We start from scratch to learn python/fastapi, etc... as if you just received a new computer. The first thing to do is to install python. Luckily, it is most likely already installed on your computer.",
        "answer": {
            "choices": [],
            "correct_choice_index": null,
            "explanation": null
        }
    },
    {
        "question": "From the terminal how do you check if python is installed and it's version?",
        "answer": {
            "choices": [
                " `$ python -v`",
                " `$ python --version`",
                " `$ python -version`",
                " `$ python -V`"
            ],
            "correct_choice_index": 1,
            "explanation": "<p>\n\n\n</p>\n</details>\n\n---\n\n"
        }
    },
    {
        "question": "You will often see `$ python` and `$ python3`, whats the difference?",
        "answer": {
            "choices": [
                " `$ python` refers to Python 3.x, `$ python3` refers to Python 2.x",
                " `$ python` and `$ python3` are aliases for the same version",
                " `$ python` refers to Python 2.x, `$ python3` refers to Python 3.x",
                " `$ python` is for Windows, `$ python3` is for Unix-based systems"
            ],
            "correct_choice_index": 2,
            "explanation": "<p>\n\n\n</p>\n</details>\n\n---\n\nFor simplicity we will use `$ python` to refer to Python 3.x in this guide.\n\n"
        }
    },
    {
        "question": "How do you determine the location of where the currently active python in your terminal is installed?",
        "answer": {
            "choices": [
                " `$ which python`",
                " `$ where python`",
                " `$ locate python`",
                " `$ find python`"
            ],
            "correct_choice_index": 0,
            "explanation": "<p>\n\n\n</p>\n</details>\n\n---\n\n"
        }
    },
    {
        "question": "Suppose python wasn't installed on your computer, how do we install it?",
        "answer": {
            "choices": [
                " Download from the official Python website",
                " Use a package manager like `$ apt` or `$ brew`",
                " Install from a third-party website",
                " All of the above"
            ],
            "correct_choice_index": 3,
            "explanation": "<p>\n\n\nAll of these methods are valid depending on your OS.\n\n</p>\n</details>\n\n---\n\nHowever, none of these methods of installation allow us to switch between python versions easily.\n\n"
        }
    },
    {
        "question": "Why might we need to switch between python versions?",
        "answer": {
            "choices": [
                " Different projects may require different versions",
                " To test compatibility with different versions",
                " To use features available only in specific versions",
                " All of the above"
            ],
            "correct_choice_index": 3,
            "explanation": "<p>\n\n\n</p>\n</details>\n\n---\n\nIf you search for the tool to solve this problem you will most likely find [pyenv](https://github.com/pyenv/pyenv) which is very popular and well regarded. But [mise](https://github.com/jdx/mise?tab=readme-ov-file#what-is-it) is a better choice as it is a lightning fast, more general tool that can manage multiple languages and tools, which we'll see next.\n"
        }
    }
]